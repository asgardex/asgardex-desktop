name: Electron build - Windows

on:
  push:
    branches:
      - 'release/**'
      - 'hotfix/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      # Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable --network-timeout 1000000

      - name: Run Post Install
        run: yarn postinstall

      - name: Run Prebuild
        run: yarn prebuild

      - name: Build
        run: yarn build
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: Package Electron
        run: yarn package:electron --publish always
        env:
          NODE_OPTIONS: --max-old-space-size=6144
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REACT_APP_BLOCKCHAIR_API_KEY: ${{ secrets.REACT_APP_BLOCKCHAIR_API_KEY }}
          REACT_APP_ETHPLORER_API_KEY: ${{ secrets.REACT_APP_ETHPLORER_API_KEY }}
          REACT_APP_ETHERSCAN_API_KEY: ${{ secrets.REACT_APP_ETHERSCAN_API_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.OS }}
          path: release

      - name: List artifacts
        run: ls ./release
