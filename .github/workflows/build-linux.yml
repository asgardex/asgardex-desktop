name: Electron build and Publish to Flathub - Linux

on:
  push:
    branches:
      - 'release/**'
      - 'hotfix/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      # Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install missing dependencies
        run: sudo apt-get update && sudo apt-get install -y libudev-dev libusb-1.0-0-dev flatpak flatpak-builder

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build Flatpak
        run: |
          flatpak-builder --user --install-deps-from=flathub build-dir org.asgardex.desktop.yml
        env:
          NODE_OPTIONS: --max-old-space-size=7168
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REACT_APP_BLOCKCYPHER_API_KEY: ${{ secrets.REACT_APP_BLOCKCYPHER_API_KEY }}
          REACT_APP_ETHERSCAN_API_KEY: ${{ secrets.REACT_APP_ETHERSCAN_API_KEY }}
          REACT_APP_BSCSCAN_API_KEY: ${{ secrets.REACT_APP_BSCSCAN_API_KEY }}
          REACT_APP_ARBISCAN_API_KEY: ${{ secrets.REACT_APP_ARBISCAN_API_KEY }}
          REACT_APP_ASGARDEX_THORNAME: ${{ secrets.REACT_APP_ASGARDEX_THORNAME }}
          REACT_APP_BASE_API_KEY: ${{ secrets.REACT_APP_BASE_API_KEY }}
          REACT_APP_SNOWTRACE_API_KEY: ${{ secrets.REACT_APP_SNOWTRACE_API_KEY }}

      - name: Package Flatpak Bundle
        run: flatpak build-bundle build-dir asgardex.flatpak org.asgardex.desktop stable

      - name: Upload Flatpak Bundle
        uses: actions/upload-artifact@v4
        with:
          name: Flatpak-Bundle
          path: asgardex.flatpak

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.OS }}
          path: release

      - name: List artifacts
        run: ls ./release
