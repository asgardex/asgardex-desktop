name: Electron build - macOS

on:
  push:
    branches:
      # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
      - 'release/**'
      - 'hotfix/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-11]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      # Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Publish macOS binaries
        run: yarn package:ci
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.MAC_CERTIFICATE }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
          SIGNING_APPLE_ID: ${{ secrets.SIGNING_APPLE_ID }}
          SIGNING_APP_PASSWORD: ${{ secrets.SIGNING_APP_PASSWORD }}
          SIGNING_TEAM_ID: ${{secrets.SIGNING_TEAM_ID}}
          REACT_APP_BLOCKCYPHER_APIBTC_KEY: ${{ secrets.REACT_APP_BLOCKCYPHER_APIBTC_KEY }}
          REACT_APP_BLOCKCYPHER_APILTC_KEY: ${{ secrets.REACT_APP_BLOCKCYPHER_APILTC_KEY }}
          REACT_APP_BLOCKCYPHER_APIDOGE_KEY: ${{ secrets.REACT_APP_BLOCKCYPHER_APIDOGE_KEY }}
          REACT_APP_ETHPLORER_API_KEY: ${{ secrets.REACT_APP_ETHPLORER_API_KEY }}
          REACT_APP_ETHERSCAN_API_KEY: ${{ secrets.REACT_APP_ETHERSCAN_API_KEY }}
          REACT_APP_SNOWTRACE_API_KEY: ${{ secrets.REACT_APP_SNOWTRACE_API_KEY }}
          REACT_APP_BSCSCAN_API_KEY: ${{ secrets.REACT_APP_BSCSCAN_API_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.OS }}
          path: release

      - name: List artifacts
        run: ls ./release
